functions:


	Login system:

		userExist($username, $password) {
			check to see is user exists in databse

			if true and is 'active':
				return true
			if true:
				show error message on login screen
				return false

		}

		login() {
			if userExist returns true
				set $_SESSION variables:
					$_SESSION['user_id']
					$_SESSION['first_name']
					$_SESSION['last_name']
					$_SESSION['email']
					$_SESSION['username']
					$_SESSION['rank_id']
					$_SESSION['logged_in'] = true
		}

		isLoggedIn() {
			if $_SESSION['logged_in'] == true
				return true
			else
				return false
		}

		logout() {
			if isLoggedIn() returns true
				session_destroy()
				redirect to index.php
			else 
				redirect to index.php
		}



	Users:

		getUsers() {
			get users if active = 1
			return array of user_id's
		}



	projects

		getAllProjects() {	//for default viewer
			get projects from database if 'active'
				along with:
					project_id
					project_name
					user_id
					status_id
					start_date
					end_date
					description
				return multidimensional array $projects[]
		}

		getUserProjects($SESSION['user_id']) {
			get projects based on user_id
				return array of project_id's
		}


		createProject($_SESSION['user_id'], 'project_name', 'start_date', 'end_date', 'description') {
			if rank_id = 2
				create project
					insert into projects('', 'project_name', 'user_id', status_id = 1, 'start_date', 'end_date', 'description', active=1)
		}

		closeProject('project_id') {
			update project(status_id) where project_id = 'project_id'
		}




	Tasks:

		createTask($_SESSION['user_id'], 'task_name', 'description', 'project_id') {
			if $_SESSION['rank_id'] = 1 or 2
				update task('', 'task_name', 'description', 'project_id', status_id = 1)
		}

		assignTasks($_SESSION['user_id'], user_id, task_id) {
			update task_user(task_id, user_id)
		}

		getUserTasks($_SESSION['user_id']) {
			get tasks based on user_id
				return array of task_id's
		}

		getProjectTasks(project_id) {
			get tasks based on project
		}

		pendCompleteTask(task_id) {
			update task(task_id, status_id)
		}